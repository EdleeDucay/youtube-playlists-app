{"ast":null,"code":"import _slicedToArray from \"C:/Users/ducay/Documents/GitHubProjects/youtube-playlists-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ducay\\\\Documents\\\\GitHubProjects\\\\youtube-playlists-app\\\\src\\\\components\\\\PlaylistList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../styles/PlaylistItem.css';\nimport VideoItem from './PlaylistItem';\nimport '../styles/VideoItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlaylistItem(_ref) {\n  _s();\n\n  var _this = this;\n\n  var videos = _ref.videos,\n      handleVideoSelect = _ref.handleVideoSelect;\n\n  // const [channelTitle, setChannelTitle] = useState('')\n  // const [channelId, setChannelId] = useState('')\n  // const [thumbnail, setThumbnail] = useState('')\n  // const [title, setTitle] = useState('')\n  // const [videoId, setVideoId] = useState('')\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoDoc = _useState2[0],\n      setVideoDoc = _useState2[1];\n\n  function getVideoData(video) {\n    setVideoDoc({\n      channelTitle: video.videoDoc.get('channel-title'),\n      channelId: video.videoDoc.get('channelId'),\n      thumbnail: video.videoDoc.get('thumbnail'),\n      title: video.videoDoc.get('title'),\n      videoId: video.videoDoc.get('videoId')\n    });\n  }\n\n  var renderedVideos = videos.map(function (video) {\n    getVideoData(video);\n    return /*#__PURE__*/_jsxDEV(PlaylistItem, {\n      video: videoDoc,\n      handleVideoSelect: handleVideoSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-item\",\n      children: [console.log(videos[0].videoDoc.get('thumbnail')), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoList\",\n        children: renderedVideos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlaylistItem, \"spp0E4KouE8OJsoB7z5Ep0XGK0s=\");\n\n_c = PlaylistItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistItem\");","map":{"version":3,"sources":["C:/Users/ducay/Documents/GitHubProjects/youtube-playlists-app/src/components/PlaylistList.js"],"names":["React","VideoItem","PlaylistItem","videos","handleVideoSelect","useState","videoDoc","setVideoDoc","getVideoData","video","channelTitle","get","channelId","thumbnail","title","videoId","renderedVideos","map","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,yBAAP;;AAEA,eAAe,SAASC,YAAT,OAAmD;AAAA;;AAAA;;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,iBAAoB,QAApBA,iBAAoB;;AAC9D;AACA;AACA;AACA;AACA;AAL8D,kBAM9BC,QAAQ,CAAC,EAAD,CANsB;AAAA;AAAA,MAMvDC,QANuD;AAAA,MAM7CC,WAN6C;;AAQ9D,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBF,IAAAA,WAAW,CAAC;AACRG,MAAAA,YAAY,EAAED,KAAK,CAACH,QAAN,CAAeK,GAAf,CAAmB,eAAnB,CADN;AAERC,MAAAA,SAAS,EAAEH,KAAK,CAACH,QAAN,CAAeK,GAAf,CAAmB,WAAnB,CAFH;AAGRE,MAAAA,SAAS,EAAEJ,KAAK,CAACH,QAAN,CAAeK,GAAf,CAAmB,WAAnB,CAHH;AAIRG,MAAAA,KAAK,EAAEL,KAAK,CAACH,QAAN,CAAeK,GAAf,CAAmB,OAAnB,CAJC;AAKRI,MAAAA,OAAO,EAAEN,KAAK,CAACH,QAAN,CAAeK,GAAf,CAAmB,SAAnB;AALD,KAAD,CAAX;AAOH;;AAED,MAAMK,cAAc,GAAGb,MAAM,CAACc,GAAP,CAAW,UAACR,KAAD,EAAW;AACzCD,IAAAA,YAAY,CAACC,KAAD,CAAZ;AACA,wBAAO,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEH,QAArB;AAA+B,MAAA,iBAAiB,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,aAAP;AAEH,GAJsB,CAAvB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBAEKc,OAAO,CAACC,GAAR,CAAYhB,MAAM,CAAC,CAAD,CAAN,CAAUG,QAAV,CAAmBK,GAAnB,CAAuB,WAAvB,CAAZ,CAFL,eAeA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACKK;AADL;AAAA;AAAA;AAAA;AAAA,cAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAnDuBd,Y;;KAAAA,Y","sourcesContent":["import React from 'react'\r\nimport '../styles/PlaylistItem.css'\r\nimport VideoItem from './PlaylistItem'\r\nimport '../styles/VideoItem.css'\r\n\r\nexport default function PlaylistItem({videos, handleVideoSelect}) {\r\n    // const [channelTitle, setChannelTitle] = useState('')\r\n    // const [channelId, setChannelId] = useState('')\r\n    // const [thumbnail, setThumbnail] = useState('')\r\n    // const [title, setTitle] = useState('')\r\n    // const [videoId, setVideoId] = useState('')\r\n    const [videoDoc, setVideoDoc] = useState({})\r\n\r\n    function getVideoData(video) {\r\n        setVideoDoc({\r\n            channelTitle: video.videoDoc.get('channel-title'),\r\n            channelId: video.videoDoc.get('channelId'),\r\n            thumbnail: video.videoDoc.get('thumbnail'),\r\n            title: video.videoDoc.get('title'),\r\n            videoId: video.videoDoc.get('videoId')\r\n        })\r\n    }\r\n\r\n    const renderedVideos = videos.map((video) => {\r\n        getVideoData(video)\r\n        return <PlaylistItem video={videoDoc} handleVideoSelect={handleVideoSelect}/>\r\n\r\n    });\r\n\r\n    return (\r\n        <div className='mt-5'>\r\n            <div className=\"playlist-item\">\r\n                {/* {console.log(videos)} */}\r\n                {console.log(videos[0].videoDoc.get('thumbnail'))}\r\n                {/* <img className=\"thumbnail\"\r\n                src={props.video.snippet.thumbnails.medium.url} \r\n                alt={props.video.snippet.description} \r\n                onClick={() => props.handleVideoSelect(props.video)}/>\r\n                <div className=\"videoItem-title\">\r\n                    {props.video.snippet.title}\r\n                </div>\r\n                <div className=\"videoItem-channel\">\r\n                    Channel: {props.video.snippet.channelTitle}\r\n                </div> */}\r\n\r\n\r\n            <div className=\"videoList\">\r\n                {renderedVideos}\r\n            </div>\r\n        \r\n\r\n            </div>\r\n        </div>\r\n        \r\n    \r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}