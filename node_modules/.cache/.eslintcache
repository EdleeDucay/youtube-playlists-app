[{"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\index.js":"1","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\reportWebVitals.js":"2","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\App.js":"3","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\FormSignup.js":"4","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\HomePage.js":"5","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\FormLogin.js":"6","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\ForgotPassword.js":"7","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\PrivateRoute.js":"8","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\contexts\\AuthContext.js":"9","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoPlayer.js":"10","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoList.js":"11","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\apis\\firebase.js":"12","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\apis\\youtube.js":"13","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoItem.js":"14","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\MyPlaylists.js":"15","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\modals\\ModalAddVideo.js":"16","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\modals\\ModalAddPlaylist.js":"17","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\PlaylistItem.js":"18"},{"size":566,"mtime":1627969918773,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":992,"mtime":1630816101744,"results":"22","hashOfConfig":"20"},{"size":5226,"mtime":1630822664998,"results":"23","hashOfConfig":"20"},{"size":4379,"mtime":1633891183759,"results":"24","hashOfConfig":"20"},{"size":3402,"mtime":1630822520277,"results":"25","hashOfConfig":"20"},{"size":2876,"mtime":1628312514021,"results":"26","hashOfConfig":"20"},{"size":456,"mtime":1628311488575,"results":"27","hashOfConfig":"20"},{"size":1239,"mtime":1630811302655,"results":"28","hashOfConfig":"20"},{"size":2293,"mtime":1631073979469,"results":"29","hashOfConfig":"20"},{"size":440,"mtime":1630737336751,"results":"30","hashOfConfig":"20"},{"size":597,"mtime":1630812773943,"results":"31","hashOfConfig":"20"},{"size":267,"mtime":1630731582500,"results":"32","hashOfConfig":"20"},{"size":703,"mtime":1630769476946,"results":"33","hashOfConfig":"20"},{"size":5011,"mtime":1633891183760,"results":"34","hashOfConfig":"20"},{"size":1716,"mtime":1631073919455,"results":"35","hashOfConfig":"20"},{"size":1377,"mtime":1630874753144,"results":"36","hashOfConfig":"20"},{"size":851,"mtime":1633891183761,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"118g11i",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\index.js",[],["81","82"],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\reportWebVitals.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\App.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\FormSignup.js",["83"],"import React, { useState, useRef } from 'react'\r\nimport {db} from '../apis/firebase'\r\nimport '../styles/Form.css'\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {Alert} from 'react-bootstrap'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nconst FormSignup = () => {\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup, currentUser} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        \r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        if (passwordRef.current.value.length < 6) {\r\n            return setError('Password must be longer than 6 characters')\r\n        }\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            try {\r\n                db.collection('Users').doc(emailRef.current.value).set({\r\n                    email: emailRef.current.value,\r\n                    username: usernameRef.current.value\r\n                })\r\n            } catch {\r\n                setError('Failed to add to the database')\r\n            }\r\n            \r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='container-wrapper'>\r\n            <div className=\"loginTitle\">\r\n                <img src='img/Youtube.png' alt='YouTube-Logo' className='youtubeLogo'/>\r\n                        Youtube Custom Playlists\r\n                        </div>\r\n            <div className='form-container'>\r\n            <div className='container'>\r\n            \r\n            <div className=\"form-content\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1>Sign up for an account</h1>\r\n                    <div className=\"form-inputs\">\r\n                     {error && <Alert className=\"w-100 h-50\" variant=\"danger\">{error}</Alert>}\r\n                        <label htmlFor='username' className='form-label'>  \r\n                        Username             \r\n                        </label>\r\n                        <input\r\n                            id='username' \r\n                            type='text' \r\n                            name='username' \r\n                            className='form-input'\r\n                            placeholder='Enter your username'\r\n                            ref={usernameRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-inputs\">\r\n                        <label htmlFor='email' className='form-label'>\r\n                            Email\r\n                        </label>\r\n                        <input \r\n                            id='email'\r\n                            type='text' \r\n                            name='email' \r\n                            className='form-input'\r\n                            placeholder='Enter your email'\r\n                            ref={emailRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-inputs\">\r\n                        <label htmlFor='password' className='form-label'>\r\n                            Password\r\n                        </label>\r\n                        <input \r\n                            id='password'\r\n                            type='password' \r\n                            name='password' \r\n                            className='form-input'\r\n                            placeholder='Enter your password'\r\n                            ref={passwordRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-inputs\">\r\n                        <label htmlFor='password2' className='form-label'>\r\n                            Confirm Password\r\n                        </label>\r\n                        <input \r\n                            id='password2'\r\n                            type='password' \r\n                            name='password2' \r\n                            className='form-input'\r\n                            placeholder='Enter your password'\r\n                            ref={passwordConfirmRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <button disabled={loading} className=\"form-input-btn\"\r\n                    type='submit'>\r\n                        Sign up\r\n                    </button>\r\n                    <span className=\"form-input-login\">\r\n                        Already have an account? Login <Link to=\"/login\">here</Link>\r\n                    </span>\r\n                </form>\r\n            </div>\r\n        </div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default FormSignup","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\HomePage.js",["84","85"],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\FormLogin.js",["86"],"import React, { useState, useRef } from 'react'\r\nimport '../styles/Form.css'\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {Alert} from 'react-bootstrap'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nconst FormLogin = () => {\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const {login} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='container-wrapper'>\r\n            <div className=\"loginTitle\">\r\n                <img src='img/Youtube.png' alt='YouTube-Logo' className='youtubeLogo'/>\r\n                        Youtube Custom Playlists\r\n                        </div>\r\n            <div className='form-container'>\r\n            <div className='container'>\r\n            \r\n            <div className=\"form-content\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1>Login to your account</h1>\r\n                    <div className=\"form-inputs\">\r\n                    {error && <Alert className=\"w-100 h-50\" variant=\"danger\">{error}</Alert>}\r\n\r\n                        <label htmlFor='email' className='form-label'>\r\n                            Email\r\n                        </label>\r\n                        <input \r\n                            id='email'\r\n                            type='text' \r\n                            name='email' \r\n                            className='form-input'\r\n                            placeholder='Enter your email'\r\n                            ref={emailRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-inputs\">\r\n                        <label htmlFor='password' className='form-label'>\r\n                            Password\r\n                        </label>\r\n                        <input \r\n                            id='password'\r\n                            type='password' \r\n                            name='password' \r\n                            className='form-input'\r\n                            placeholder='Enter your password'\r\n                            ref={passwordRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    \r\n                    <button disabled={loading} className=\"form-input-btn\"\r\n                    type='submit'>\r\n                        Login\r\n                    </button>\r\n                    <div className=\"form-input-login\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </form>\r\n                <span className=\"form-input-login\">\r\n                        Need an account? Signup <Link to=\"/signup\">here</Link>\r\n                    </span>\r\n            </div>\r\n            \r\n        </div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default FormLogin","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\ForgotPassword.js",["87"],"import React, { useState, useRef } from 'react'\r\nimport '../styles/Form.css'\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {Alert} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ForgotPassword = () => {\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const {resetPassword} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setMessage('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage(\"An email has been sent\")\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='container-wrapper'>\r\n            <div className=\"loginTitle\">\r\n                <img src='img/Youtube.png' alt='YouTube-Logo' className='youtubeLogo'/>\r\n                        Youtube Custom Playlists\r\n                        </div>\r\n            <div className='form-container'>\r\n            <div className='container'>\r\n            \r\n            <div className=\"form-content\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1>Password Reset</h1>\r\n                    <div className=\"form-inputs\">\r\n                    {error && <Alert className=\"w-100 h-50\" variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant='success'>{message}</Alert>}\r\n                        <label htmlFor='email' className='form-label'>\r\n                            Email\r\n                        </label>\r\n                        <input \r\n                            id='email'\r\n                            type='text' \r\n                            name='email' \r\n                            className='form-input'\r\n                            placeholder='Enter your email'\r\n                            ref={emailRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    \r\n                    \r\n                    <button disabled={loading} className=\"form-input-btn\"\r\n                    type='submit'>\r\n                        Reset Password\r\n                    </button>\r\n                    <div className=\"form-input-login\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </form>\r\n                <span className=\"form-input-login\">\r\n                        Need an account? Signup <Link to=\"/signup\">here</Link>\r\n                    </span>\r\n            </div>\r\n            \r\n        </div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default ForgotPassword","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\PrivateRoute.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\contexts\\AuthContext.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoPlayer.js",["88","89","90","91","92","93"],"import React, {useState} from 'react'\r\nimport \"../styles/Home.css\"\r\nimport {Button, Alert, Navbar, Nav, Form, FormControl, Modal} from 'react-bootstrap'\r\nimport ModalAddVideo from './modals/ModalAddVideo'\r\nimport {db} from '../apis/firebase'\r\n\r\n\r\nexport default function VideoPlayer({selectedVideo, playlists, currentUser}) {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    if (!selectedVideo) {\r\n        return <div className=\"homeIntro\">\r\n            \r\n        </div>\r\n    }\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${selectedVideo.id.videoId}`;\r\n    const channelSrc = `https://www.youtube.com/channel/${selectedVideo.snippet.channelId}`;\r\n\r\n    function addVideoToDatabase(playlist) {\r\n        console.log('video: ', selectedVideo)\r\n        if (playlist !== \"\") {\r\n            db.collection('Users').doc(currentUser).collection('Playlists').doc(playlist).collection('Videos').doc(selectedVideo.id.videoId).set({\r\n                'title': selectedVideo.snippet.title,\r\n                'channel-title': selectedVideo.snippet.channelTitle,\r\n                'videoId': selectedVideo.id.videoId,\r\n                'channelId': selectedVideo.snippet.channelId,\r\n                'thumbnail': selectedVideo.snippet.thumbnails.medium.url\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"videoPlayer embed-responsive embed-responsive-16by9\">\r\n                <iframe src={videoSrc} \r\n                    allowFullScreen \r\n                    title=\"Video player\"\r\n                    className=\"embed-responsive-item\"/>\r\n\r\n                <h4>{selectedVideo.snippet.title}</h4>         \r\n                <a className=\"videoPlayer-channelTitle\" href={channelSrc}>{selectedVideo.snippet.channelTitle}</a>    \r\n\r\n                <Button variant=\"secondary\" className=\"videoPlayer-add\" onClick={() => setModalShow(true)}>\r\n                Add to Playlist\r\n                </Button>\r\n                {console.log(playlists)}\r\n                <ModalAddVideo\r\n                playlists={playlists}\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                onSubmit={addVideoToDatabase}\r\n                />\r\n            </div>\r\n            <hr/>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoList.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\apis\\firebase.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\apis\\youtube.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoItem.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\MyPlaylists.js",["94","95"],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\modals\\ModalAddVideo.js",["96","97"],"import React, {useState} from 'react'\r\nimport {Modal, Button, Form, FormControl} from 'react-bootstrap'\r\nimport '../../styles/Modals.css'\r\n\r\nexport default function MyVerticallyCenteredModal(props) {\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState('')\r\n\r\n  function handleChange(e) {\r\n    setSelectedPlaylist(e.target.value)\r\n  }\r\n\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add to a Playlist\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4></h4>\r\n\r\n        <Form onSubmit={props.onSubmit(selectedPlaylist)}>\r\n            <Form.Control \r\n                as=\"select\"\r\n                aria-label=\"Default select example\"\r\n                placeholder='Select a Playlist'\r\n                value={selectedPlaylist}\r\n                onChange={handleChange}\r\n                required\r\n            >\r\n              <option value=''> -- Select a Playlist -- </option>\r\n            {props.playlists.map(opt => (\r\n              <option value={opt.id}>{opt.id}</option>\r\n            ))}\r\n                \r\n               \r\n                \r\n            \r\n\r\n                \r\n            </Form.Control>\r\n            <div className='text-center'>\r\n            <Button type='submit' variant=\"success\" className=\"w-75 mt-3 modal-create-btn\">Add the Video</Button>\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='danger' onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\modals\\ModalAddPlaylist.js",["98","99"],"import React, {useState, useRef} from 'react'\r\nimport {Modal, Button, Form} from 'react-bootstrap'\r\nimport '../../styles/Modals.css'\r\n\r\nexport default function MyVerticallyCenteredModal(props) {\r\n    const titleRef = useRef()\r\n    \r\n    function handleChange() {\r\n      props.setPlaylistTitle(titleRef.current.value)\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Create a new Playlist\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4></h4>\r\n\r\n            <Form onSubmit={props.onSubmit} onChange={handleChange}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formCreatePlaylist\">\r\n                    <Form.Label className=\"modal-label\">Playlist Name</Form.Label>\r\n                    <Form.Control placeholder=\"Name of your playlist\" ref={titleRef} required/>\r\n\r\n                </Form.Group>\r\n             <Button type='submit' variant=\"success\" className=\"w-100 modal-create-btn\">Create</Button>\r\n                \r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    );\r\n}\r\n","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\PlaylistItem.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":13,"column":20,"nodeType":"106","messageId":"107","endLine":13,"endColumn":31},{"ruleId":"104","severity":1,"message":"108","line":1,"column":45,"nodeType":"106","messageId":"107","endLine":1,"endColumn":62},{"ruleId":"109","severity":1,"message":"110","line":78,"column":8,"nodeType":"111","endLine":78,"endColumn":10,"suggestions":"112"},{"ruleId":"104","severity":1,"message":"113","line":8,"column":11,"nodeType":"106","messageId":"107","endLine":8,"endColumn":22},{"ruleId":"104","severity":1,"message":"113","line":8,"column":11,"nodeType":"106","messageId":"107","endLine":8,"endColumn":22},{"ruleId":"104","severity":1,"message":"114","line":3,"column":17,"nodeType":"106","messageId":"107","endLine":3,"endColumn":22},{"ruleId":"104","severity":1,"message":"115","line":3,"column":24,"nodeType":"106","messageId":"107","endLine":3,"endColumn":30},{"ruleId":"104","severity":1,"message":"116","line":3,"column":32,"nodeType":"106","messageId":"107","endLine":3,"endColumn":35},{"ruleId":"104","severity":1,"message":"117","line":3,"column":37,"nodeType":"106","messageId":"107","endLine":3,"endColumn":41},{"ruleId":"104","severity":1,"message":"118","line":3,"column":43,"nodeType":"106","messageId":"107","endLine":3,"endColumn":54},{"ruleId":"104","severity":1,"message":"119","line":3,"column":56,"nodeType":"106","messageId":"107","endLine":3,"endColumn":61},{"ruleId":"104","severity":1,"message":"108","line":1,"column":45,"nodeType":"106","messageId":"107","endLine":1,"endColumn":62},{"ruleId":"109","severity":1,"message":"110","line":69,"column":8,"nodeType":"111","endLine":69,"endColumn":10,"suggestions":"120"},{"ruleId":"104","severity":1,"message":"118","line":2,"column":30,"nodeType":"106","messageId":"107","endLine":2,"endColumn":41},{"ruleId":"121","severity":1,"message":"122","line":25,"column":11,"nodeType":"123","endLine":25,"endColumn":15},{"ruleId":"104","severity":1,"message":"124","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":26,"column":11,"nodeType":"123","endLine":26,"endColumn":15},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'componentDidMount' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'usernameRef' is assigned a value but never used.","'Alert' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Modal' is defined but never used.",["128"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"129","fix":"131"},"Update the dependencies array to be: [currentUser.email]",{"range":"132","text":"133"},{"range":"134","text":"133"},[2341,2343],"[currentUser.email]",[2230,2232]]