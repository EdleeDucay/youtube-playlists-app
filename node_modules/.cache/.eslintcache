[{"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\index.js":"1","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\reportWebVitals.js":"2","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\App.js":"3","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\FormSignup.js":"4","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\HomePage.js":"5","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\FormLogin.js":"6","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\ForgotPassword.js":"7","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\PrivateRoute.js":"8","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\contexts\\AuthContext.js":"9","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoPlayer.js":"10","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoList.js":"11","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\apis\\firebase.js":"12","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\apis\\youtube.js":"13","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoItem.js":"14","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\MyPlaylists.js":"15","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\modals\\ModalAddVideo.js":"16","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\modals\\ModalAddPlaylist.js":"17","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\PlaylistItem.js":"18"},{"size":566,"mtime":1627969918773,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":992,"mtime":1630816101744,"results":"22","hashOfConfig":"20"},{"size":5226,"mtime":1630822664998,"results":"23","hashOfConfig":"20"},{"size":4379,"mtime":1631072688311,"results":"24","hashOfConfig":"20"},{"size":3402,"mtime":1630822520277,"results":"25","hashOfConfig":"20"},{"size":2876,"mtime":1628312514021,"results":"26","hashOfConfig":"20"},{"size":456,"mtime":1628311488575,"results":"27","hashOfConfig":"20"},{"size":1239,"mtime":1630811302655,"results":"28","hashOfConfig":"20"},{"size":2293,"mtime":1631073979469,"results":"29","hashOfConfig":"20"},{"size":440,"mtime":1630737336751,"results":"30","hashOfConfig":"20"},{"size":597,"mtime":1630812773943,"results":"31","hashOfConfig":"20"},{"size":267,"mtime":1630731582500,"results":"32","hashOfConfig":"20"},{"size":703,"mtime":1630769476946,"results":"33","hashOfConfig":"20"},{"size":5011,"mtime":1630950024717,"results":"34","hashOfConfig":"20"},{"size":1716,"mtime":1631073919455,"results":"35","hashOfConfig":"20"},{"size":1377,"mtime":1630874753144,"results":"36","hashOfConfig":"20"},{"size":851,"mtime":1630949508314,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"118g11i",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\index.js",[],["80","81"],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\reportWebVitals.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\App.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\FormSignup.js",["82"],"import React, { useState, useRef } from 'react'\r\nimport {db} from '../apis/firebase'\r\nimport '../styles/Form.css'\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {Alert} from 'react-bootstrap'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nconst FormSignup = () => {\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup, currentUser} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        \r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        if (passwordRef.current.value.length < 6) {\r\n            return setError('Password must be longer than 6 characters')\r\n        }\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            try {\r\n                db.collection('Users').doc(emailRef.current.value).set({\r\n                    email: emailRef.current.value,\r\n                    username: usernameRef.current.value\r\n                })\r\n            } catch {\r\n                setError('Failed to add to the database')\r\n            }\r\n            \r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='container-wrapper'>\r\n            <div className=\"loginTitle\">\r\n                <img src='img/Youtube.png' alt='YouTube-Logo' className='youtubeLogo'/>\r\n                        Youtube Custom Playlists\r\n                        </div>\r\n            <div className='form-container'>\r\n            <div className='container'>\r\n            \r\n            <div className=\"form-content\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1>Sign up for an account</h1>\r\n                    <div className=\"form-inputs\">\r\n                     {error && <Alert className=\"w-100 h-50\" variant=\"danger\">{error}</Alert>}\r\n                        <label htmlFor='username' className='form-label'>  \r\n                        Username             \r\n                        </label>\r\n                        <input\r\n                            id='username' \r\n                            type='text' \r\n                            name='username' \r\n                            className='form-input'\r\n                            placeholder='Enter your username'\r\n                            ref={usernameRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-inputs\">\r\n                        <label htmlFor='email' className='form-label'>\r\n                            Email\r\n                        </label>\r\n                        <input \r\n                            id='email'\r\n                            type='text' \r\n                            name='email' \r\n                            className='form-input'\r\n                            placeholder='Enter your email'\r\n                            ref={emailRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-inputs\">\r\n                        <label htmlFor='password' className='form-label'>\r\n                            Password\r\n                        </label>\r\n                        <input \r\n                            id='password'\r\n                            type='password' \r\n                            name='password' \r\n                            className='form-input'\r\n                            placeholder='Enter your password'\r\n                            ref={passwordRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-inputs\">\r\n                        <label htmlFor='password2' className='form-label'>\r\n                            Confirm Password\r\n                        </label>\r\n                        <input \r\n                            id='password2'\r\n                            type='password' \r\n                            name='password2' \r\n                            className='form-input'\r\n                            placeholder='Enter your password'\r\n                            ref={passwordConfirmRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <button disabled={loading} className=\"form-input-btn\"\r\n                    type='submit'>\r\n                        Sign up\r\n                    </button>\r\n                    <span className=\"form-input-login\">\r\n                        Already have an account? Login <Link to=\"/login\">here</Link>\r\n                    </span>\r\n                </form>\r\n            </div>\r\n        </div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default FormSignup","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\HomePage.js",["83","84"],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\FormLogin.js",["85"],"import React, { useState, useRef } from 'react'\r\nimport '../styles/Form.css'\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {Alert} from 'react-bootstrap'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nconst FormLogin = () => {\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const {login} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='container-wrapper'>\r\n            <div className=\"loginTitle\">\r\n                <img src='img/Youtube.png' alt='YouTube-Logo' className='youtubeLogo'/>\r\n                        Youtube Custom Playlists\r\n                        </div>\r\n            <div className='form-container'>\r\n            <div className='container'>\r\n            \r\n            <div className=\"form-content\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1>Login to your account</h1>\r\n                    <div className=\"form-inputs\">\r\n                    {error && <Alert className=\"w-100 h-50\" variant=\"danger\">{error}</Alert>}\r\n\r\n                        <label htmlFor='email' className='form-label'>\r\n                            Email\r\n                        </label>\r\n                        <input \r\n                            id='email'\r\n                            type='text' \r\n                            name='email' \r\n                            className='form-input'\r\n                            placeholder='Enter your email'\r\n                            ref={emailRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-inputs\">\r\n                        <label htmlFor='password' className='form-label'>\r\n                            Password\r\n                        </label>\r\n                        <input \r\n                            id='password'\r\n                            type='password' \r\n                            name='password' \r\n                            className='form-input'\r\n                            placeholder='Enter your password'\r\n                            ref={passwordRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    \r\n                    <button disabled={loading} className=\"form-input-btn\"\r\n                    type='submit'>\r\n                        Login\r\n                    </button>\r\n                    <div className=\"form-input-login\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </form>\r\n                <span className=\"form-input-login\">\r\n                        Need an account? Signup <Link to=\"/signup\">here</Link>\r\n                    </span>\r\n            </div>\r\n            \r\n        </div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default FormLogin","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\ForgotPassword.js",["86"],"import React, { useState, useRef } from 'react'\r\nimport '../styles/Form.css'\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {Alert} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ForgotPassword = () => {\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const {resetPassword} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setMessage('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage(\"An email has been sent\")\r\n        } catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='container-wrapper'>\r\n            <div className=\"loginTitle\">\r\n                <img src='img/Youtube.png' alt='YouTube-Logo' className='youtubeLogo'/>\r\n                        Youtube Custom Playlists\r\n                        </div>\r\n            <div className='form-container'>\r\n            <div className='container'>\r\n            \r\n            <div className=\"form-content\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1>Password Reset</h1>\r\n                    <div className=\"form-inputs\">\r\n                    {error && <Alert className=\"w-100 h-50\" variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant='success'>{message}</Alert>}\r\n                        <label htmlFor='email' className='form-label'>\r\n                            Email\r\n                        </label>\r\n                        <input \r\n                            id='email'\r\n                            type='text' \r\n                            name='email' \r\n                            className='form-input'\r\n                            placeholder='Enter your email'\r\n                            ref={emailRef}\r\n                            required\r\n                            />\r\n                    </div>\r\n                    \r\n                    \r\n                    <button disabled={loading} className=\"form-input-btn\"\r\n                    type='submit'>\r\n                        Reset Password\r\n                    </button>\r\n                    <div className=\"form-input-login\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </form>\r\n                <span className=\"form-input-login\">\r\n                        Need an account? Signup <Link to=\"/signup\">here</Link>\r\n                    </span>\r\n            </div>\r\n            \r\n        </div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default ForgotPassword","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\PrivateRoute.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\contexts\\AuthContext.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoPlayer.js",["87","88","89","90","91","92"],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoList.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\apis\\firebase.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\apis\\youtube.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\VideoItem.js",[],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\MyPlaylists.js",["93","94"],"import React, {useState, useRef, useEffect, componentDidMount} from 'react'\r\nimport {Button, Alert, Navbar, Nav, Form, FormControl} from 'react-bootstrap'\r\nimport \"../styles/Home.css\"\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport youtube from '../apis/youtube'\r\nimport VideoList from './VideoList'\r\nimport VideoPlayer from './VideoPlayer'\r\nimport ModalAddPlaylist from './modals/ModalAddPlaylist' \r\nimport {db} from '../apis/firebase'\r\nimport PlaylistItem from './PlaylistItem'\r\n\r\nexport default function MyPlaylists() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser, logout} = useAuth()\r\n    const history = useHistory()\r\n    const [videos, setVideos] = useState([])\r\n    const [selectedVideo, setSelectedVideo] = useState(null)\r\n    const searchRef = useRef()\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [playlistTitle, setPlaylistTitle] = useState('')\r\n    const [playlists, setPlaylists] = useState([])\r\n\r\n    async function handleLogout() {\r\n        setError('')\r\n\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch {\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: searchRef.current.value\r\n            }\r\n        })\r\n        setVideos(response.data.items)\r\n\r\n    }\r\n\r\n    function handleVideoSelect(video) {\r\n        setSelectedVideo(video)\r\n    }\r\n\r\n    function onCreatePlaylistSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        db.collection(\"Users\").doc(currentUser.email).collection(\"Playlists\").doc(playlistTitle).set({\r\n            'title': playlistTitle\r\n        })\r\n        setModalShow(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Grab current users playlists\r\n        const fetchPlaylists = async () => {\r\n            const snapshot = await db.collection('Users').doc(currentUser.email).collection(\"Playlists\").get()\r\n            console.log(\"SNAPSHOT: \", snapshot.docs)\r\n            setPlaylists(snapshot.docs)\r\n        }\r\n        fetchPlaylists()\r\n\r\n    }, []);\r\n\r\n    // Bind each playlist to a component\r\n    const renderedPlaylists = playlists.map((playlist) => {\r\n        return <PlaylistItem />\r\n    })\r\n \r\n    return (\r\n        <>\r\n        {error && <Alert variant='danger'>{error}</Alert>}\r\n        <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n\r\n            <Navbar.Brand className=\"px-3\">\r\n                <Link to=\"/\" className=\"homeBrand\">\r\n                <img src='img/Youtube.png' alt='YouTube-Logo' className='youtubeLogoHome'/>\r\n                        Youtube Custom Playlists\r\n                </Link>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n                <Nav.Link to=\"/\" className=\"homeLink px-3\">My Playlists</Nav.Link>\r\n                <Form className=\"d-flex px-5\" onSubmit={handleSubmit}>\r\n                    <FormControl\r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        className=\"mr-3\"\r\n                        aria-label=\"Search\"\r\n                        ref= {searchRef}\r\n                        style={{minWidth: '500px', \r\n                            backgroundColor: 'rgb(50, 50, 50)',\r\n                            color: 'white',\r\n                            borderColor: 'rgb(50, 50, 50)'}}\r\n                    />\r\n                    <Button variant=\"secondary\" onClick={handleSubmit}>Search</Button>\r\n                </Form>\r\n            </Nav>\r\n            \r\n            <Nav >\r\n                <Nav.Link className=\"px-3 homeEmail\" disabled>{currentUser.email}</Nav.Link>\r\n                <Button variant=\"secondary\" className=\"mx-3\" onClick={handleLogout}>Logout</Button>\r\n\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        \r\n        </Navbar>\r\n\r\n       \r\n       \r\n        <div className=\"homeBody\">\r\n\r\n            <div className=\"text-center\">\r\n                <Button variant=\"secondary\" className=\"myplaylist-create-btn w-25 mt-3\" onClick={() => setModalShow(true)}>\r\n                        Create a Custom Playlist\r\n                        </Button>\r\n                \r\n                        <ModalAddPlaylist\r\n                        show={modalShow}\r\n                        setPlaylistTitle={setPlaylistTitle}\r\n                        onSubmit={onCreatePlaylistSubmit}\r\n                        onHide={() => setModalShow(false)}/>\r\n            </div>\r\n        \r\n            <div className=\"playlists\">\r\n                {renderedPlaylists}\r\n            </div>\r\n\r\n\r\n            <VideoPlayer selectedVideo={selectedVideo}/>\r\n            <VideoList handleVideoSelect={handleVideoSelect} videos={videos}/>\r\n        </div>\r\n        \r\n        </>\r\n       \r\n    )\r\n}\r\n","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\modals\\ModalAddVideo.js",["95","96"],"C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\modals\\ModalAddPlaylist.js",["97","98"],"import React, {useState, useRef} from 'react'\r\nimport {Modal, Button, Form} from 'react-bootstrap'\r\nimport '../../styles/Modals.css'\r\n\r\nexport default function MyVerticallyCenteredModal(props) {\r\n    const titleRef = useRef()\r\n    \r\n    function handleChange() {\r\n      props.setPlaylistTitle(titleRef.current.value)\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Create a new Playlist\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4></h4>\r\n\r\n            <Form onSubmit={props.onSubmit} onChange={handleChange}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formCreatePlaylist\">\r\n                    <Form.Label className=\"modal-label\">Playlist Name</Form.Label>\r\n                    <Form.Control placeholder=\"Name of your playlist\" ref={titleRef} required/>\r\n\r\n                </Form.Group>\r\n             <Button type='submit' variant=\"success\" className=\"w-100 modal-create-btn\">Create</Button>\r\n                \r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    );\r\n}\r\n","C:\\Users\\ducay\\Documents\\GitHubProjects\\youtube-playlists-app\\src\\components\\PlaylistItem.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":13,"column":20,"nodeType":"105","messageId":"106","endLine":13,"endColumn":31},{"ruleId":"103","severity":1,"message":"107","line":1,"column":45,"nodeType":"105","messageId":"106","endLine":1,"endColumn":62},{"ruleId":"108","severity":1,"message":"109","line":78,"column":8,"nodeType":"110","endLine":78,"endColumn":10,"suggestions":"111"},{"ruleId":"103","severity":1,"message":"112","line":8,"column":11,"nodeType":"105","messageId":"106","endLine":8,"endColumn":22},{"ruleId":"103","severity":1,"message":"112","line":8,"column":11,"nodeType":"105","messageId":"106","endLine":8,"endColumn":22},{"ruleId":"103","severity":1,"message":"113","line":3,"column":17,"nodeType":"105","messageId":"106","endLine":3,"endColumn":22},{"ruleId":"103","severity":1,"message":"114","line":3,"column":24,"nodeType":"105","messageId":"106","endLine":3,"endColumn":30},{"ruleId":"103","severity":1,"message":"115","line":3,"column":32,"nodeType":"105","messageId":"106","endLine":3,"endColumn":35},{"ruleId":"103","severity":1,"message":"116","line":3,"column":37,"nodeType":"105","messageId":"106","endLine":3,"endColumn":41},{"ruleId":"103","severity":1,"message":"117","line":3,"column":43,"nodeType":"105","messageId":"106","endLine":3,"endColumn":54},{"ruleId":"103","severity":1,"message":"118","line":3,"column":56,"nodeType":"105","messageId":"106","endLine":3,"endColumn":61},{"ruleId":"103","severity":1,"message":"107","line":1,"column":45,"nodeType":"105","messageId":"106","endLine":1,"endColumn":62},{"ruleId":"108","severity":1,"message":"109","line":69,"column":8,"nodeType":"110","endLine":69,"endColumn":10,"suggestions":"119"},{"ruleId":"103","severity":1,"message":"117","line":2,"column":30,"nodeType":"105","messageId":"106","endLine":2,"endColumn":41},{"ruleId":"120","severity":1,"message":"121","line":25,"column":11,"nodeType":"122","endLine":25,"endColumn":15},{"ruleId":"103","severity":1,"message":"123","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":26,"column":11,"nodeType":"122","endLine":26,"endColumn":15},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'componentDidMount' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'usernameRef' is assigned a value but never used.","'Alert' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Modal' is defined but never used.",["127"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},"Update the dependencies array to be: [currentUser.email]",{"range":"131","text":"132"},{"range":"133","text":"132"},[2341,2343],"[currentUser.email]",[2230,2232]]